{"version":3,"sources":["../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/PaginationItem.js","../node_modules/reactstrap/es/PaginationLink.js","../node_modules/reactstrap/es/Pagination.js","../node_modules/react-table/index.js","../../src/publicUtils.js","../../src/utils.js","../../src/makeDefaultPluginHooks.js","../../src/hooks/useColumnVisibility.js","../../src/hooks/useTable.js","../../src/plugin-hooks/useExpanded.js","../../src/filterTypes.js","../../src/plugin-hooks/useFilters.js","../../src/plugin-hooks/useGlobalFilter.js","../../src/aggregations.js","../../src/plugin-hooks/useGroupBy.js","../../src/sortTypes.js","../../src/plugin-hooks/useSortBy.js","../../src/plugin-hooks/usePagination.js","../../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../../src/plugin-hooks/useRowSelect.js","../../src/plugin-hooks/useRowState.js","../../src/plugin-hooks/useColumnOrder.js","../../src/plugin-hooks/useResizeColumns.js","../../src/plugin-hooks/useAbsoluteLayout.js","../../src/plugin-hooks/useBlockLayout.js","../../src/plugin-hooks/useFlexLayout.js","../node_modules/reactstrap/es/Table.js"],"names":["propTypes","tag","tagPropType","inverse","PropTypes","bool","color","string","body","outline","className","cssModule","object","innerRef","oneOfType","func","Card","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","listTag","listClassName","children","node","Breadcrumb","ListTag","label","listClasses","active","BreadcrumbItem","undefined","CardBody","CardTitle","disabled","PaginationItem","next","previous","first","last","PaginationLink","defaultAriaLabel","defaultCaret","ariaLabel","Array","isArray","length","href","key","size","Pagination","_classNames","module","exports","require","actions","init","defaultColumn","Cell","value","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","reduce","style","makePropGetter","hooks","meta","userProps","prev","handlePropGetter","prevProps","reduceHooks","initial","allowUndefined","loopHooks","context","forEach","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","obj","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","fn","deps","mountedRef","makeRenderer","instance","column","type","Comp","console","info","Error","flexRender","component","proto","Object","getPrototypeOf","prototype","isReactComponent","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","split","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","get","flattenDeep","arr","newArr","i","push","String","d","replace","join","reOpenBracket","reCloseBracket","set","cursor","pathPart","e","row","error","assign","decorateColumn","userDefaultColumn","Footer","makeHeaderGroups","allColumns","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","reverse","originalId","placeholderOf","Map","getFirstDefined","args","isFunction","a","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","target","checked","isVisible","title","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","values","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","keys","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","useMemo","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","Set","emptyArray","emptyObject","resetGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","setGroupBy","resolvedGroupBy","groupByColumns","col","g","nonGroupByColumns","isGrouped","groupedIndex","indexOf","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","aggregateFn","aggregate","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","compareBasic","b","getRowValueByColumnID","toString","isNaN","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","sort","getTime","resetSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","floor","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","slice","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","from","u","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","supported","options","window","addEventListener","err","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","flex","totalColumnsMinWidth","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","instanceRef","userColumns","getStateReducer","s","handler","useReducer","reducerState","allColumnsQueue","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups","bordered","borderless","striped","dark","hover","responsive","responsiveTag","Table","ResponsiveTag","table","responsiveClassName"],"mappings":"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","file":"static/js/97.c6c7ce39.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  disabled: PropTypes.bool,\n  tag: tagPropType\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar PaginationItem = function PaginationItem(props) {\n  var active = props.active,\n      className = props.className,\n      cssModule = props.cssModule,\n      disabled = props.disabled,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"active\", \"className\", \"cssModule\", \"disabled\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'page-item', {\n    active: active,\n    disabled: disabled\n  }), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nPaginationItem.propTypes = propTypes;\nPaginationItem.defaultProps = defaultProps;\nexport default PaginationItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  'aria-label': PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  next: PropTypes.bool,\n  previous: PropTypes.bool,\n  first: PropTypes.bool,\n  last: PropTypes.bool,\n  tag: tagPropType\n};\nvar defaultProps = {\n  tag: 'a'\n};\n\nvar PaginationLink = function PaginationLink(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      next = props.next,\n      previous = props.previous,\n      first = props.first,\n      last = props.last,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"next\", \"previous\", \"first\", \"last\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'page-link'), cssModule);\n  var defaultAriaLabel;\n\n  if (previous) {\n    defaultAriaLabel = 'Previous';\n  } else if (next) {\n    defaultAriaLabel = 'Next';\n  } else if (first) {\n    defaultAriaLabel = 'First';\n  } else if (last) {\n    defaultAriaLabel = 'Last';\n  }\n\n  var ariaLabel = props['aria-label'] || defaultAriaLabel;\n  var defaultCaret;\n\n  if (previous) {\n    defaultCaret = \"\\u2039\";\n  } else if (next) {\n    defaultCaret = \"\\u203A\";\n  } else if (first) {\n    defaultCaret = \"\\xAB\";\n  } else if (last) {\n    defaultCaret = \"\\xBB\";\n  }\n\n  var children = props.children;\n\n  if (children && Array.isArray(children) && children.length === 0) {\n    children = null;\n  }\n\n  if (!attributes.href && Tag === 'a') {\n    Tag = 'button';\n  }\n\n  if (previous || next || first || last) {\n    children = [React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      key: \"caret\"\n    }, children || defaultCaret), React.createElement(\"span\", {\n      className: \"sr-only\",\n      key: \"sr\"\n    }, ariaLabel)];\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": ariaLabel\n  }), children);\n};\n\nPaginationLink.propTypes = propTypes;\nPaginationLink.defaultProps = defaultProps;\nexport default PaginationLink;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  tag: tagPropType,\n  listTag: tagPropType,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ul',\n  'aria-label': 'pagination'\n};\n\nvar Pagination = function Pagination(props) {\n  var _classNames;\n\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      size = props.size,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"size\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames(listClassName, 'pagination', (_classNames = {}, _classNames[\"pagination-\" + size] = !!size, _classNames)), cssModule);\n  return React.createElement(Tag, {\n    className: classes,\n    \"aria-label\": label\n  }, React.createElement(ListTag, _extends({}, attributes, {\n    className: listClasses\n  })));\n};\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\nexport default Pagination;","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultColumn = {\n  Cell: ({ value = '' }) => value,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import React from 'react'\nimport { defaultColumn } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: () => <>&nbsp;</>,\n    Footer: () => <>&nbsp;</>,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(allColumns, defaultColumn) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = row => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    expandedRows.push(row)\n\n    if (expandSubRows && row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(handleRow)\n    }\n  }\n\n  rows.forEach(handleRow)\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(originalRow, rowIndex, row)\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = 0\n  let max = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  let min = 0\n  let max = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return (min + max) / 2\n}\n\nexport function unique(values) {\n  return [...new Set(values).values()]\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Get the columnValues to aggregate\n        const groupedValues = groupedRows.map(row => row.values[column.id])\n\n        // Get the columnValues to aggregate\n        const leafValues = leafRows.map(row => {\n          let columnValue = row.values[column.id]\n\n          if (!depth && column.aggregateValue) {\n            const aggregateValueFn =\n              typeof column.aggregateValue === 'function'\n                ? column.aggregateValue\n                : userAggregations[column.aggregateValue] ||\n                  aggregations[column.aggregateValue]\n\n            if (!aggregateValueFn) {\n              console.info({ column })\n              throw new Error(\n                `React Table: Invalid column.aggregateValue option for column listed above`\n              )\n            }\n\n            columnValue = aggregateValueFn(columnValue, row, column)\n          }\n          return columnValue\n        })\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated = !cell.isGrouped && !cell.isPlaceholder && row.canExpand\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\n\nexport function datetime(rowA, rowB, columnId) {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValueByColumnID(row, columnId) {\n  return row.values[columnId]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length <= 1) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true } = instance\n\n    // Join the ids of deep rows\n    // to make a key, then manage all of the keys\n    // in a flat object\n    const row = rowsById[id]\n    const isSelected = row.isSelected\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && row.subRows) {\n        return row.subRows.forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  if (row.subRows && row.subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    row.subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = originalRow => ({})\nconst defaultInitialCellStateAccessor = originalRow => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId].original)\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId].original)\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(rowsById[rowId].original)\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row.original) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row.original)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(row.original)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'ew-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width = columnResizing.columnWidths[header.id] || header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance({ plugins }) {\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;"],"sourceRoot":""}