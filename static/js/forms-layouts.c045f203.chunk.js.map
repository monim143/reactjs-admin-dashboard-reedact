{"version":3,"sources":["components/common/CustomSelectInput.js","../node_modules/reactstrap/es/FormText.js","views/app/ui/forms/layouts.js","containers/navs/Breadcrumb.js"],"names":["CustomSelectInput","props","customProps","autoCorrect","autoCapitalize","Input","propTypes","children","PropTypes","node","inline","bool","tag","tagPropType","color","string","className","cssModule","object","FormText","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","selectData","label","value","key","injectIntl","match","intl","useState","selectedOptionLO","setSelectedOptionLO","selectedOptionLT","setSelectedOptionLT","startDateLO","setStartDateLO","startDateLT","setStartDateLT","tagsLO","setTagsLO","tagsLT","setTagsLT","messages","xxs","heading","id","for","type","name","placeholder","row","sm","check","disabled","onChange","val","inputProps","selected","components","classNamePrefix","options","shouldCloseOnSelect","getMenuTitle","sub","getUrl","path","index","split","BreadcrumbItems","substr","paths","length","indexOf","filter","x","map","active","to","BreadcrumbContainer"],"mappings":"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","file":"static/js/forms-layouts.c045f203.chunk.js","sourcesContent":["import React from 'react';\r\nimport { components } from 'react-select';\r\n\r\nconst CustomSelectInput = (props) => {\r\n  const customProps = { ...props };\r\n  delete customProps.autoCorrect;\r\n  delete customProps.autoCapitalize;\r\n  return <components.Input {...customProps} />;\r\n};\r\n\r\nexport default CustomSelectInput;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'small',\n  color: 'muted'\n};\n\nvar FormText = function FormText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      inline = props.inline,\n      color = props.color,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"inline\", \"color\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, !inline ? 'form-text' : false, color ? \"text-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormText.propTypes = propTypes;\nFormText.defaultProps = defaultProps;\nexport default FormText;","import React, { useState } from 'react';\r\nimport {\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  CardTitle,\r\n  FormGroup,\r\n  Label,\r\n  CustomInput,\r\n  Button,\r\n  FormText,\r\n  Form,\r\n} from 'reactstrap';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nimport DatePicker from 'react-datepicker';\r\nimport TagsInput from 'react-tagsinput';\r\n\r\nimport 'react-tagsinput/react-tagsinput.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'rc-switch/assets/index.css';\r\nimport 'rc-slider/assets/index.css';\r\nimport 'react-rater/lib/react-rater.css';\r\n\r\nimport Select from 'react-select';\r\nimport {\r\n  Colxx,\r\n  Separator,\r\n} from '../../../../components/common/CustomBootstrap';\r\nimport Breadcrumb from '../../../../containers/navs/Breadcrumb';\r\n\r\nimport IntlMessages from '../../../../helpers/IntlMessages';\r\nimport CustomSelectInput from '../../../../components/common/CustomSelectInput';\r\n\r\nconst selectData = [\r\n  { label: 'Cake', value: 'cake', key: 0 },\r\n  { label: 'Cupcake', value: 'cupcake', key: 1 },\r\n  { label: 'Dessert', value: 'dessert', key: 2 },\r\n];\r\n\r\nconst FormLayoutsUi = ({ match, intl }) => {\r\n  const [selectedOptionLO, setSelectedOptionLO] = useState('');\r\n  const [selectedOptionLT, setSelectedOptionLT] = useState('');\r\n  const [startDateLO, setStartDateLO] = useState(null);\r\n  const [startDateLT, setStartDateLT] = useState(null);\r\n  const [tagsLO, setTagsLO] = useState([]);\r\n  const [tagsLT, setTagsLT] = useState([]);\r\n\r\n  const { messages } = intl;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <Breadcrumb heading=\"menu.form-layouts\" match={match} />\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n      <Row className=\"mb-4\">\r\n        <Colxx xxs=\"12\">\r\n          <Card>\r\n            <CardBody>\r\n              <CardTitle>\r\n                <IntlMessages id=\"forms.basic\" />\r\n              </CardTitle>\r\n              <Form>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\">\r\n                    <IntlMessages id=\"forms.email\" />\r\n                  </Label>\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"exampleEmail\"\r\n                    placeholder={messages['forms.email']}\r\n                  />\r\n                  <FormText color=\"muted\">\r\n                    <IntlMessages id=\"forms.email-muted\" />\r\n                  </FormText>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                  <Label for=\"passwordBasic\">\r\n                    <IntlMessages id=\"forms.password\" />\r\n                  </Label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    name=\"passwordBasic\"\r\n                    id=\"passwordBasic\"\r\n                    placeholder={messages['forms.password']}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                  <CustomInput\r\n                    type=\"checkbox\"\r\n                    id=\"exampleCustomCheckbox\"\r\n                    label=\"Check this custom checkbox\"\r\n                  />\r\n                </FormGroup>\r\n\r\n                <Button color=\"primary\" className=\"mt-4\">\r\n                  <IntlMessages id=\"forms.submit\" />\r\n                </Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n\r\n      <Row className=\"mb-4\">\r\n        <Colxx xxs=\"12\">\r\n          <Card>\r\n            <CardBody>\r\n              <CardTitle>\r\n                <IntlMessages id=\"forms.horizontal\" />\r\n              </CardTitle>\r\n              <Form>\r\n                <FormGroup row>\r\n                  <Label for=\"emailHorizontal\" sm={2}>\r\n                    <IntlMessages id=\"forms.email\" />\r\n                  </Label>\r\n                  <Colxx sm={10}>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"emailHorizontal\"\r\n                      placeholder={messages['forms.email']}\r\n                    />\r\n                  </Colxx>\r\n                </FormGroup>\r\n\r\n                <FormGroup row>\r\n                  <Label for=\"passwordHorizontal\" sm={2}>\r\n                    <IntlMessages id=\"forms.password\" />\r\n                  </Label>\r\n                  <Colxx sm={10}>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"passwordHorizontal\"\r\n                      placeholder={messages['forms.password']}\r\n                    />\r\n                  </Colxx>\r\n                </FormGroup>\r\n\r\n                <FormGroup row>\r\n                  <Label sm={2} className=\"pt-0\">\r\n                    <IntlMessages id=\"forms.radios\" />\r\n                  </Label>\r\n                  <Colxx sm={10}>\r\n                    <FormGroup check>\r\n                      <Label check>\r\n                        <Input type=\"radio\" name=\"radio1\" />\r\n                        <IntlMessages id=\"forms.first-radio\" />\r\n                      </Label>\r\n                    </FormGroup>\r\n                    <FormGroup check>\r\n                      <Label check>\r\n                        <Input type=\"radio\" name=\"radio1\" />\r\n                        <IntlMessages id=\"forms.second-radio\" />\r\n                      </Label>\r\n                    </FormGroup>\r\n                    <FormGroup check disabled>\r\n                      <Label check>\r\n                        <Input type=\"radio\" name=\"radio1\" disabled />\r\n                        <IntlMessages id=\"forms.third-radio-disabled\" />\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </Colxx>\r\n                </FormGroup>\r\n\r\n                <FormGroup row>\r\n                  <Label sm={2} className=\"pt-0\">\r\n                    <IntlMessages id=\"forms.checkbox\" />\r\n                  </Label>\r\n                  <Colxx sm={10}>\r\n                    <FormGroup check>\r\n                      <Label check>\r\n                        <Input type=\"checkbox\" name=\"check1\" /> Example\r\n                        <IntlMessages id=\"forms.checkbox\" />\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </Colxx>\r\n                </FormGroup>\r\n\r\n                <Button color=\"primary\">\r\n                  <IntlMessages id=\"forms.signin\" />\r\n                </Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n\r\n      <Row className=\"mb-4\">\r\n        <Colxx xxs=\"12\">\r\n          <Card>\r\n            <CardBody>\r\n              <CardTitle>\r\n                <IntlMessages id=\"forms.top-labels-over-line\" />\r\n              </CardTitle>\r\n\r\n              <Form>\r\n                <Label className=\"form-group has-float-label\">\r\n                  <IntlMessages id=\"forms.email\" />\r\n                  <Input type=\"email\" />\r\n                </Label>\r\n                <Label className=\"form-group has-float-label\">\r\n                  <IntlMessages id=\"forms.password\" />\r\n                  <Input type=\"password\" />\r\n                </Label>\r\n                <div className=\"form-group has-float-label\">\r\n                  <IntlMessages id=\"forms.tags\" />\r\n                  <TagsInput\r\n                    value={tagsLO}\r\n                    onChange={(val) => setTagsLO(val)}\r\n                    inputProps={{ placeholder: '' }}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group has-float-label\">\r\n                  <IntlMessages id=\"forms.date\" />\r\n                  <DatePicker\r\n                    selected={startDateLO}\r\n                    onChange={(val) => setStartDateLO(val)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group has-float-label\">\r\n                  <IntlMessages id=\"forms.state\" />\r\n                  <Select\r\n                    components={{ Input: CustomSelectInput }}\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\"react-select\"\r\n                    name=\"form-field-name\"\r\n                    value={selectedOptionLO}\r\n                    onChange={(val) => setSelectedOptionLO(val)}\r\n                    options={selectData}\r\n                    placeholder=\"\"\r\n                  />\r\n                </div>\r\n\r\n                <Button color=\"primary\">\r\n                  <IntlMessages id=\"forms.submit\" />\r\n                </Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n\r\n      <Row className=\"mb-4\">\r\n        <Colxx xxs=\"12\">\r\n          <Card>\r\n            <CardBody>\r\n              <CardTitle>\r\n                <IntlMessages id=\"forms.top-labels-in-input\" />\r\n              </CardTitle>\r\n\r\n              <Form>\r\n                <FormGroup className=\"form-group has-top-label\">\r\n                  <Label>\r\n                    <IntlMessages id=\"forms.email-u\" />\r\n                  </Label>\r\n                  <Input type=\"email\" />\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"form-group has-top-label\">\r\n                  <Label>\r\n                    <IntlMessages id=\"forms.password-u\" />\r\n                  </Label>\r\n\r\n                  <Input type=\"password\" />\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"form-group has-top-label\">\r\n                  <Label>\r\n                    <IntlMessages id=\"forms.tags-u\" />\r\n                  </Label>\r\n                  <TagsInput\r\n                    value={tagsLT}\r\n                    onChange={(val) => setTagsLT(val)}\r\n                    inputProps={{ placeholder: '' }}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"form-group has-top-label\">\r\n                  <Label>\r\n                    <IntlMessages id=\"forms.date-u\" />\r\n                  </Label>\r\n                  <DatePicker\r\n                    shouldCloseOnSelect\r\n                    selected={startDateLT}\r\n                    onChange={(val) => setStartDateLT(val)}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"form-group has-top-label\">\r\n                  <Label>\r\n                    <IntlMessages id=\"forms.state-u\" />\r\n                  </Label>\r\n                  <Select\r\n                    components={{ Input: CustomSelectInput }}\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\"react-select\"\r\n                    name=\"form-field-name\"\r\n                    value={selectedOptionLT}\r\n                    onChange={(val) => setSelectedOptionLT(val)}\r\n                    options={selectData}\r\n                    placeholder=\"\"\r\n                  />\r\n                </FormGroup>\r\n\r\n                <Button color=\"primary\">\r\n                  <IntlMessages id=\"forms.submit\" />\r\n                </Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n\r\n      <Row className=\"mb-4\">\r\n        <Colxx xxs=\"12\">\r\n          <Card>\r\n            <CardBody>\r\n              <CardTitle>\r\n                <IntlMessages id=\"forms.grid\" />\r\n              </CardTitle>\r\n              <Form>\r\n                <FormGroup row>\r\n                  <Colxx sm={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"exampleEmailGrid\">\r\n                        <IntlMessages id=\"forms.email\" />\r\n                      </Label>\r\n                      <Input\r\n                        type=\"email\"\r\n                        name=\"exampleEmailGrid\"\r\n                        id=\"exampleEmailGrid\"\r\n                        placeholder={messages['forms.email']}\r\n                      />\r\n                    </FormGroup>\r\n                  </Colxx>\r\n\r\n                  <Colxx sm={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"examplePasswordGrid\">\r\n                        <IntlMessages id=\"forms.password\" />\r\n                      </Label>\r\n                      <Input\r\n                        type=\"password\"\r\n                        name=\"examplePasswordGrid\"\r\n                        id=\"examplePasswordGrid\"\r\n                        placeholder={messages['forms.password']}\r\n                      />\r\n                    </FormGroup>\r\n                  </Colxx>\r\n\r\n                  <Colxx sm={12}>\r\n                    <FormGroup>\r\n                      <Label for=\"exampleAddressGrid\">\r\n                        <IntlMessages id=\"forms.address\" />\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"exampleAddressGrid\"\r\n                        id=\"exampleAddressGrid\"\r\n                        placeholder={messages['forms.address']}\r\n                      />\r\n                    </FormGroup>\r\n                  </Colxx>\r\n\r\n                  <Colxx sm={12}>\r\n                    <FormGroup>\r\n                      <Label for=\"exampleAddress2Grid\">\r\n                        <IntlMessages id=\"forms.address2\" />\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"exampleAddress2Grid\"\r\n                        id=\"exampleAddress2Grid\"\r\n                        placeholder={messages['forms.address']}\r\n                      />\r\n                    </FormGroup>\r\n                  </Colxx>\r\n\r\n                  <Colxx sm={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"exampleEmailGrid\">\r\n                        <IntlMessages id=\"forms.city\" />\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"exampleTextGrid\"\r\n                        id=\"exampleTextGrid\"\r\n                        placeholder={messages['forms.city']}\r\n                      />\r\n                    </FormGroup>\r\n                  </Colxx>\r\n\r\n                  <Colxx sm={4}>\r\n                    <FormGroup>\r\n                      <Label>\r\n                        <IntlMessages id=\"forms.state\" />\r\n                      </Label>\r\n                      <Input type=\"select\">\r\n                        <option>Option 1</option>\r\n                        <option>Option 2</option>\r\n                        <option>Option 3</option>\r\n                        <option>Option 4</option>\r\n                        <option>Option 5</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </Colxx>\r\n\r\n                  <Colxx sm={2}>\r\n                    <FormGroup>\r\n                      <Label for=\"exampleZipGrid\">\r\n                        <IntlMessages id=\"forms.zip\" />\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"exampleZipGrid\"\r\n                        id=\"exampleZipGrid\"\r\n                        placeholder={messages['forms.zip']}\r\n                      />\r\n                    </FormGroup>\r\n                  </Colxx>\r\n                </FormGroup>\r\n\r\n                <Button color=\"primary\">\r\n                  <IntlMessages id=\"forms.signup\" />\r\n                </Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default injectIntl(FormLayoutsUi);\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nconst getMenuTitle = (sub) => {\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return '';\r\n  }\r\n  return path.split(sub)[0] + sub;\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <>\r\n      {heading && (\r\n        <h1>\r\n          <IntlMessages id={heading} />\r\n        </h1>\r\n      )}\r\n      <BreadcrumbItems match={match} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split('/');\r\n  if (paths[paths.length - 1].indexOf(':') > -1) {\r\n    paths = paths.filter((x) => x.indexOf(':') === -1);\r\n  }\r\n  return (\r\n    <>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n"],"sourceRoot":""}