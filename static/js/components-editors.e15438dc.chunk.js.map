{"version":3,"sources":["views/app/ui/components/editors.js","containers/navs/Breadcrumb.js"],"names":["quillModules","toolbar","list","indent","quillFormats","EditorsUi","match","useState","textQuillStandart","setTextQuillStandart","textQuillBubble","setTextQuillBubble","xxs","heading","className","id","theme","value","onChange","val","modules","formats","getMenuTitle","sub","getUrl","path","index","split","BreadcrumbItems","substr","paths","length","indexOf","filter","x","map","key","active","to","BreadcrumbContainer"],"mappings":"wOAaMA,G,cAAe,CACnBC,QAAS,CACP,CAAC,OAAQ,SAAU,YAAa,SAAU,cAC1C,CACE,CAAEC,KAAM,WACR,CAAEA,KAAM,UACR,CAAEC,OAAQ,MACV,CAAEA,OAAQ,OAEZ,CAAC,OAAQ,SACT,CAAC,YAICC,EAAe,CACnB,SACA,OACA,SACA,YACA,SACA,aACA,OACA,SACA,SACA,OACA,SAqDaC,UAlDG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACmBC,mBAAS,IAD5B,mBACxBC,EADwB,KACLC,EADK,OAEeF,mBAAS,IAFxB,mBAExBG,EAFwB,KAEPC,EAFO,KAI/B,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,IAAI,MACT,kBAAC,IAAD,CAAYC,QAAQ,eAAeP,MAAOA,IAC1C,kBAAC,IAAD,CAAWQ,UAAU,WAGzB,kBAAC,IAAD,CAAKA,UAAU,QACb,kBAAC,IAAD,CAAOF,IAAI,MACT,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcG,GAAG,4BAEnB,kBAAC,IAAD,CACEC,MAAM,OACNC,MAAOT,EACPU,SAAU,SAACC,GAAD,OAASV,EAAqBU,IACxCC,QAASpB,EACTqB,QAASjB,QAOnB,kBAAC,IAAD,CAAKU,UAAU,QACb,kBAAC,IAAD,CAAOF,IAAI,MACT,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcG,GAAG,0BAEnB,kBAAC,IAAD,CACEC,MAAM,SACNC,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAASR,EAAmBQ,a,gCClFtD,sDAMMG,EAAe,SAACC,GACpB,OAAO,kBAAC,IAAD,CAAcR,GAAE,eAAUQ,MAG7BC,EAAS,SAACC,EAAMF,EAAKG,GACzB,OAAc,IAAVA,EACK,GAEFD,EAAKE,MAAMJ,GAAK,GAAKA,GAgBxBK,EAAkB,SAAC,GAAe,IAChCH,EAD+B,EAAZnB,MACNmB,KAAKI,OAAO,GAC3BC,EAAQL,EAAKE,MAAM,KAIvB,OAHIG,EAAMA,EAAMC,OAAS,GAAGC,QAAQ,MAAQ,IAC1CF,EAAQA,EAAMG,QAAO,SAACC,GAAD,OAA2B,IAApBA,EAAEF,QAAQ,SAGtC,oCACE,kBAAC,IAAD,CAAYlB,UAAU,iEACnBgB,EAAMK,KAAI,SAACZ,EAAKG,GACf,OACE,kBAAC,IAAD,CAAgBU,IAAKV,EAAOW,OAAQP,EAAMC,SAAWL,EAAQ,GAC1DI,EAAMC,SAAWL,EAAQ,EACxB,kBAAC,IAAD,CAASY,GAAE,WAAMd,EAAOC,EAAMF,EAAKG,KAChCJ,EAAaC,IAGhBD,EAAaC,UAUdgB,IAxCa,SAAC,GAAwB,IAAtB1B,EAAqB,EAArBA,QAASP,EAAY,EAAZA,MACtC,OACE,oCACGO,GACC,4BACE,kBAAC,IAAD,CAAcE,GAAIF,KAGtB,kBAACe,EAAD,CAAiBtB,MAAOA","file":"static/js/components-editors.e15438dc.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Row, Card, CardBody, CardTitle } from 'reactstrap';\r\nimport ReactQuill from 'react-quill';\r\nimport {\r\n  Colxx,\r\n  Separator,\r\n} from '../../../../components/common/CustomBootstrap';\r\nimport Breadcrumb from '../../../../containers/navs/Breadcrumb';\r\nimport IntlMessages from '../../../../helpers/IntlMessages';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport 'react-quill/dist/quill.bubble.css';\r\n\r\nconst quillModules = {\r\n  toolbar: [\r\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n    [\r\n      { list: 'ordered' },\r\n      { list: 'bullet' },\r\n      { indent: '-1' },\r\n      { indent: '+1' },\r\n    ],\r\n    ['link', 'image'],\r\n    ['clean'],\r\n  ],\r\n};\r\n\r\nconst quillFormats = [\r\n  'header',\r\n  'bold',\r\n  'italic',\r\n  'underline',\r\n  'strike',\r\n  'blockquote',\r\n  'list',\r\n  'bullet',\r\n  'indent',\r\n  'link',\r\n  'image',\r\n];\r\n\r\nconst EditorsUi = ({ match }) => {\r\n  const [textQuillStandart, setTextQuillStandart] = useState('');\r\n  const [textQuillBubble, setTextQuillBubble] = useState('');\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <Breadcrumb heading=\"menu.editors\" match={match} />\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n      <Row className=\"mb-4\">\r\n        <Colxx xxs=\"12\">\r\n          <Card>\r\n            <CardBody>\r\n              <CardTitle>\r\n                <IntlMessages id=\"editors.quill-standart\" />\r\n              </CardTitle>\r\n              <ReactQuill\r\n                theme=\"snow\"\r\n                value={textQuillStandart}\r\n                onChange={(val) => setTextQuillStandart(val)}\r\n                modules={quillModules}\r\n                formats={quillFormats}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n\r\n      <Row className=\"mb-4\">\r\n        <Colxx xxs=\"12\">\r\n          <Card>\r\n            <CardBody>\r\n              <CardTitle>\r\n                <IntlMessages id=\"editors.quill-bubble\" />\r\n              </CardTitle>\r\n              <ReactQuill\r\n                theme=\"bubble\"\r\n                value={textQuillBubble}\r\n                onChange={(val) => setTextQuillBubble(val)}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default EditorsUi;\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nconst getMenuTitle = (sub) => {\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return '';\r\n  }\r\n  return path.split(sub)[0] + sub;\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <>\r\n      {heading && (\r\n        <h1>\r\n          <IntlMessages id={heading} />\r\n        </h1>\r\n      )}\r\n      <BreadcrumbItems match={match} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split('/');\r\n  if (paths[paths.length - 1].indexOf(':') > -1) {\r\n    paths = paths.filter((x) => x.indexOf(':') === -1);\r\n  }\r\n  return (\r\n    <>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n"],"sourceRoot":""}