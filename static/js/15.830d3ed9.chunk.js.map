{"version":3,"sources":["components/charts/util.js","components/charts/config.js","components/charts/Area.js","components/charts/Bar.js","components/charts/Doughnut.js","components/charts/Line.js","components/charts/Pie.js","components/charts/PolarArea.js","components/charts/Radar.js","components/charts/Scatter.js","components/charts/SmallLine.js","data/charts.js","helpers/ThemeColors.js","containers/dashboards/WebsiteVisitsChartCard.js","components/cards/RadialProgressCard.js","containers/dashboards/SmallLineCharts.js","containers/navs/Breadcrumb.js"],"names":["chartTooltip","backgroundColor","ThemeColors","foregroundColor","titleFontColor","primaryColor","borderColor","separatorColor","borderWidth","bodyFontColor","bodySpacing","xPadding","yPadding","cornerRadius","centerTextPlugin","afterDatasetsUpdate","chart","beforeDraw","width","chartArea","right","height","bottom","ctx","restore","activeLabel","data","labels","activeValue","datasets","dataset","meta","_meta","Object","keys","total","activePercentage","parseFloat","toFixed","legend","legendItems","hidden","pointAvailable","pointIndex","pointDataIndex","font","fillStyle","textBaseline","text","textX","Math","round","measureText","textY","fillText","text2","textX2","textY2","save","beforeEvent","event","options","firstPoint","getElementAtEvent","_index","_datasetIndex","lineChartOptions","display","responsive","maintainAspectRatio","tooltips","plugins","datalabels","scales","yAxes","gridLines","lineWidth","color","drawBorder","ticks","beginAtZero","stepSize","min","max","padding","xAxes","polarAreaChartOptions","position","usePointStyle","fontSize","scale","areaChartOptions","scatterChartOptions","barChartOptions","radarChartOptions","pieChartOptions","title","layout","doughnutChartOptions","cutoutPercentage","smallLineChartOptions","left","top","Area","shadow","chartContainer","useRef","useState","setChartInstance","useEffect","current","Chart","defaults","lineWithShadow","line","controllers","extend","draw","ease","prototype","call","this","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","stroke","apply","arguments","context","getContext","newChartInstance","type","ref","Bar","global","barWithShadow","bar","Doughnut","doughnutWithShadow","doughnut","Line","Pie","pieWithShadow","pie","PolarArea","polarWithShadow","polarArea","radar","Radar","radarWithShadow","Scatter","scatterWithShadow","scatter","addCommas","nStr","x","split","x1","x2","length","rgx","test","replace","currentValue","setCurrentValue","currentLabel","setCurrentLabel","changeState","yLabel","xLabel","lineWithLine","tooltip","_active","tooltipPosition","topY","bottomY","beginPath","moveTo","lineTo","strokeStyle","intersect","enabled","custom","tooltipModel","dataPoints","label","body","lines","afterInit","_options","className","colors","lineChartData","themeColor1","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","pointRadius","pointBorderWidth","pointHoverRadius","fill","polarAreaChartData","themeColor2","themeColor3","themeColor1_10","themeColor2_10","themeColor3_10","areaChartData","scatterChartData","showLine","y","barChartData","radarChartData","pieChartData","doughnutChartData","smallChartData1","align","anchor","smallChartData2","smallChartData3","smallChartData4","conversionChartData","rootStyle","getComputedStyle","document","getPropertyValue","trim","themeColor4","themeColor5","themeColor6","themeColor4_10","themeColor5_10","themeColor6_10","WebsiteVisitsChartCard","controls","id","caret","outline","React","memo","percent","isSortable","strokeWidth","value","SmallLineCharts","itemClass","xxs","getMenuTitle","sub","getUrl","path","index","BreadcrumbItems","match","substr","paths","indexOf","filter","map","key","active","to","BreadcrumbContainer","heading"],"mappings":"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","file":"static/js/15.830d3ed9.chunk.js","sourcesContent":["import { ThemeColors } from '../../helpers/ThemeColors';\r\n\r\nexport const chartTooltip = {\r\n  backgroundColor: ThemeColors().foregroundColor,\r\n  titleFontColor: ThemeColors().primaryColor,\r\n  borderColor: ThemeColors().separatorColor,\r\n  borderWidth: 0.5,\r\n  bodyFontColor: ThemeColors().primaryColor,\r\n  bodySpacing: 10,\r\n  xPadding: 15,\r\n  yPadding: 15,\r\n  cornerRadius: 0.15,\r\n};\r\n\r\nexport const centerTextPlugin = {\r\n  afterDatasetsUpdate(chart) {},\r\n  beforeDraw(chart) {\r\n    const width = chart.chartArea.right;\r\n    const height = chart.chartArea.bottom;\r\n    const { ctx } = chart.chart;\r\n    ctx.restore();\r\n\r\n    let activeLabel = chart.data.labels[0];\r\n    let activeValue = chart.data.datasets[0].data[0];\r\n    let dataset = chart.data.datasets[0];\r\n    let meta = dataset._meta[Object.keys(dataset._meta)[0]];\r\n    let { total } = meta;\r\n\r\n    let activePercentage = parseFloat(((activeValue / total) * 100).toFixed(1));\r\n    activePercentage = chart.legend.legendItems[0].hidden\r\n      ? 0\r\n      : activePercentage;\r\n\r\n    if (chart.pointAvailable) {\r\n      activeLabel = chart.data.labels[chart.pointIndex];\r\n      activeValue =\r\n        chart.data.datasets[chart.pointDataIndex].data[chart.pointIndex];\r\n\r\n      dataset = chart.data.datasets[chart.pointDataIndex];\r\n      meta = dataset._meta[Object.keys(dataset._meta)[0]];\r\n      total = meta.total;\r\n      activePercentage = parseFloat(((activeValue / total) * 100).toFixed(1));\r\n      activePercentage = chart.legend.legendItems[chart.pointIndex].hidden\r\n        ? 0\r\n        : activePercentage;\r\n    }\r\n\r\n    ctx.font = '36px Nunito, sans-serif';\r\n    ctx.fillStyle = ThemeColors().primaryColor;\r\n    ctx.textBaseline = 'middle';\r\n\r\n    const text = `${activePercentage}%`;\r\n    const textX = Math.round((width - ctx.measureText(text).width) / 2);\r\n    const textY = height / 2;\r\n    ctx.fillText(text, textX, textY);\r\n\r\n    ctx.font = '14px Nunito, sans-serif';\r\n    ctx.textBaseline = 'middle';\r\n\r\n    const text2 = activeLabel;\r\n    const textX2 = Math.round((width - ctx.measureText(text2).width) / 2);\r\n    const textY2 = height / 2 - 30;\r\n    ctx.fillText(text2, textX2, textY2);\r\n\r\n    ctx.save();\r\n  },\r\n  beforeEvent(chart, event, options) {\r\n    const firstPoint = chart.getElementAtEvent(event)[0];\r\n\r\n    if (firstPoint) {\r\n      chart.pointIndex = firstPoint._index;\r\n      chart.pointDataIndex = firstPoint._datasetIndex;\r\n      chart.pointAvailable = true;\r\n    }\r\n  },\r\n};\r\n","import { chartTooltip } from './util';\r\n\r\nexport const lineChartOptions = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  tooltips: chartTooltip,\r\n  plugins: {\r\n    datalabels: {\r\n      display: false,\r\n    },\r\n  },\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n          lineWidth: 1,\r\n          color: 'rgba(0,0,0,0.1)',\r\n          drawBorder: false,\r\n        },\r\n        ticks: {\r\n          beginAtZero: true,\r\n          stepSize: 5,\r\n          min: 50,\r\n          max: 70,\r\n          padding: 20,\r\n        },\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\nexport const polarAreaChartOptions = {\r\n  legend: {\r\n    position: 'bottom',\r\n    labels: {\r\n      padding: 30,\r\n      usePointStyle: true,\r\n      fontSize: 12,\r\n    },\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  scale: {\r\n    ticks: {\r\n      display: false,\r\n    },\r\n  },\r\n  plugins: {\r\n    datalabels: {\r\n      display: false,\r\n    },\r\n  },\r\n  tooltips: chartTooltip,\r\n};\r\n\r\nexport const areaChartOptions = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  tooltips: chartTooltip,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n          lineWidth: 1,\r\n          color: 'rgba(0,0,0,0.1)',\r\n          drawBorder: false,\r\n        },\r\n        ticks: {\r\n          beginAtZero: true,\r\n          stepSize: 5,\r\n          min: 50,\r\n          max: 70,\r\n          padding: 20,\r\n        },\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nexport const scatterChartOptions = {\r\n  legend: {\r\n    position: 'bottom',\r\n    labels: {\r\n      padding: 30,\r\n      usePointStyle: true,\r\n      fontSize: 12,\r\n    },\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n          lineWidth: 1,\r\n          color: 'rgba(0,0,0,0.1)',\r\n          drawBorder: false,\r\n        },\r\n        ticks: {\r\n          beginAtZero: true,\r\n          stepSize: 20,\r\n          min: -80,\r\n          max: 80,\r\n          padding: 20,\r\n        },\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n          lineWidth: 1,\r\n          color: 'rgba(0,0,0,0.1)',\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  tooltips: chartTooltip,\r\n\r\n  // legend: {\r\n  //   position: 'bottom',\r\n  //   labels: {\r\n  //     padding: 30,\r\n  //     usePointStyle: true,\r\n  //     fontSize: 12,\r\n  //   },\r\n  // },\r\n  // responsive: true,\r\n  // maintainAspectRatio: false,\r\n  // scales: {\r\n  //   yAxes: [\r\n  //     {\r\n  //       gridLines: {\r\n  //         display: true,\r\n  //         lineWidth: 1,\r\n  //         color: 'rgba(0,0,0,0.1)',\r\n  //         drawBorder: false,\r\n  //       },\r\n  //       ticks: {\r\n  //         beginAtZero: true,\r\n  //         stepSize: 20,\r\n  //         min: -80,\r\n  //         max: 80,\r\n  //         padding: 20,\r\n  //       },\r\n  //     },\r\n  //   ],\r\n  //   xAxes: [\r\n  //     {\r\n  //       gridLines: {\r\n  //         display: true,\r\n  //         lineWidth: 1,\r\n  //         color: 'rgba(0,0,0,0.1)',\r\n  //       },\r\n  //     },\r\n  //   ],\r\n  // },\r\n};\r\n\r\nexport const barChartOptions = {\r\n  legend: {\r\n    position: 'bottom',\r\n    labels: {\r\n      padding: 30,\r\n      usePointStyle: true,\r\n      fontSize: 12,\r\n    },\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n          lineWidth: 1,\r\n          color: 'rgba(0,0,0,0.1)',\r\n          drawBorder: false,\r\n        },\r\n        ticks: {\r\n          beginAtZero: true,\r\n          stepSize: 100,\r\n          min: 300,\r\n          max: 800,\r\n          padding: 20,\r\n        },\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  tooltips: chartTooltip,\r\n};\r\n\r\nexport const radarChartOptions = {\r\n  legend: {\r\n    position: 'bottom',\r\n    labels: {\r\n      padding: 30,\r\n      usePointStyle: true,\r\n      fontSize: 12,\r\n    },\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  scale: {\r\n    ticks: {\r\n      display: false,\r\n    },\r\n  },\r\n  tooltips: chartTooltip,\r\n};\r\n\r\nexport const pieChartOptions = {\r\n  legend: {\r\n    position: 'bottom',\r\n    labels: {\r\n      padding: 30,\r\n      usePointStyle: true,\r\n      fontSize: 12,\r\n    },\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  title: {\r\n    display: false,\r\n  },\r\n  layout: {\r\n    padding: {\r\n      bottom: 20,\r\n    },\r\n  },\r\n  tooltips: chartTooltip,\r\n};\r\n\r\nexport const doughnutChartOptions = {\r\n  legend: {\r\n    position: 'bottom',\r\n    labels: {\r\n      padding: 30,\r\n      usePointStyle: true,\r\n      fontSize: 12,\r\n    },\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  title: {\r\n    display: false,\r\n  },\r\n  cutoutPercentage: 80,\r\n  layout: {\r\n    padding: {\r\n      bottom: 20,\r\n    },\r\n  },\r\n  tooltips: chartTooltip,\r\n};\r\n\r\nexport const smallLineChartOptions = {\r\n  layout: {\r\n    padding: {\r\n      left: 5,\r\n      right: 5,\r\n      top: 10,\r\n      bottom: 10,\r\n    },\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n        display: false,\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        display: false,\r\n      },\r\n    ],\r\n  },\r\n};\r\n","/* eslint-disable prefer-rest-params */\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { Chart } from 'chart.js';\r\n\r\nimport { areaChartOptions } from './config';\r\n\r\nconst Area = ({ data, shadow = false }) => {\r\n  const chartContainer = useRef(null);\r\n  const [, setChartInstance] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (chartContainer && chartContainer.current) {\r\n      if (shadow) {\r\n        Chart.defaults.lineWithShadow = Chart.defaults.line;\r\n        Chart.controllers.lineWithShadow = Chart.controllers.line.extend({\r\n          draw(ease) {\r\n            Chart.controllers.line.prototype.draw.call(this, ease);\r\n            const {\r\n              chart: { ctx },\r\n            } = this;\r\n            ctx.save();\r\n            ctx.shadowColor = 'rgba(0,0,0,0.15)';\r\n            ctx.shadowBlur = 10;\r\n            ctx.shadowOffsetX = 0;\r\n            ctx.shadowOffsetY = 10;\r\n            ctx.responsive = true;\r\n            ctx.stroke();\r\n            Chart.controllers.line.prototype.draw.apply(this, arguments);\r\n            ctx.restore();\r\n          },\r\n        });\r\n      }\r\n      const context = chartContainer.current.getContext('2d');\r\n      const newChartInstance = new Chart(context, {\r\n        type: shadow ? 'lineWithShadow' : 'line',\r\n        options: areaChartOptions,\r\n        data,\r\n      });\r\n      setChartInstance(newChartInstance);\r\n    }\r\n  }, [chartContainer, data, shadow]);\r\n\r\n  return <canvas ref={chartContainer} />;\r\n};\r\n\r\nexport default Area;\r\n","/* eslint-disable prefer-rest-params */\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { Chart } from 'chart.js';\r\n\r\nimport { barChartOptions } from './config';\r\n\r\nconst Bar = ({ data, shadow = false }) => {\r\n  const chartContainer = useRef(null);\r\n  const [, setChartInstance] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (chartContainer && chartContainer.current) {\r\n      if (shadow) {\r\n        Chart.defaults.global.datasets.barWithShadow =\r\n          Chart.defaults.global.datasets.bar;\r\n        Chart.defaults.barWithShadow = Chart.defaults.bar;\r\n        Chart.controllers.barWithShadow = Chart.controllers.bar.extend({\r\n          draw(ease) {\r\n            Chart.controllers.bar.prototype.draw.call(this, ease);\r\n            const {\r\n              chart: { ctx },\r\n            } = this;\r\n            ctx.save();\r\n            ctx.shadowColor = 'rgba(0,0,0,0.2)';\r\n            ctx.shadowBlur = 7;\r\n            ctx.shadowOffsetX = 5;\r\n            ctx.shadowOffsetY = 7;\r\n            ctx.responsive = true;\r\n            Chart.controllers.bar.prototype.draw.apply(this, arguments);\r\n            ctx.restore();\r\n          },\r\n        });\r\n      }\r\n      const context = chartContainer.current.getContext('2d');\r\n      const newChartInstance = new Chart(context, {\r\n        type: shadow ? 'barWithShadow' : 'bar',\r\n        options: barChartOptions,\r\n        data,\r\n      });\r\n      setChartInstance(newChartInstance);\r\n    }\r\n  }, [chartContainer, data, shadow]);\r\n\r\n  return <canvas ref={chartContainer} />;\r\n};\r\n\r\nexport default Bar;\r\n","/* eslint-disable prefer-rest-params */\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { Chart } from 'chart.js';\r\n\r\nimport { centerTextPlugin } from './util';\r\nimport { doughnutChartOptions } from './config';\r\n\r\nconst Doughnut = ({ data, shadow = false }) => {\r\n  const chartContainer = useRef(null);\r\n  const [, setChartInstance] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (chartContainer && chartContainer.current) {\r\n      if (shadow) {\r\n        Chart.defaults.doughnutWithShadow = Chart.defaults.doughnut;\r\n        Chart.controllers.doughnutWithShadow = Chart.controllers.doughnut.extend(\r\n          {\r\n            draw(ease) {\r\n              Chart.controllers.doughnut.prototype.draw.call(this, ease);\r\n              const {\r\n                chart: { ctx },\r\n              } = this;\r\n              ctx.save();\r\n              ctx.shadowColor = 'rgba(0,0,0,0.15)';\r\n              ctx.shadowBlur = 10;\r\n              ctx.shadowOffsetX = 0;\r\n              ctx.shadowOffsetY = 10;\r\n              ctx.responsive = true;\r\n              Chart.controllers.doughnut.prototype.draw.apply(this, arguments);\r\n              ctx.restore();\r\n            },\r\n          }\r\n        );\r\n      }\r\n      const context = chartContainer.current.getContext('2d');\r\n      const newChartInstance = new Chart(context, {\r\n        type: shadow ? 'doughnutWithShadow' : 'doughnut',\r\n        options: doughnutChartOptions,\r\n        plugins: [centerTextPlugin],\r\n        data,\r\n      });\r\n      setChartInstance(newChartInstance);\r\n    }\r\n  }, [chartContainer, data, shadow]);\r\n\r\n  return <canvas ref={chartContainer} />;\r\n};\r\n\r\nexport default Doughnut;\r\n","/* eslint-disable prefer-rest-params */\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { Chart } from 'chart.js';\r\n\r\nimport { lineChartOptions } from './config';\r\n\r\nconst Line = ({ data, shadow = false }) => {\r\n  const chartContainer = useRef(null);\r\n  const [, setChartInstance] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (chartContainer && chartContainer.current) {\r\n      if (shadow) {\r\n        Chart.controllers.lineWithShadow = Chart.controllers.line;\r\n        Chart.controllers.lineWithShadow = Chart.controllers.line.extend({\r\n          draw(ease) {\r\n            Chart.controllers.line.prototype.draw.call(this, ease);\r\n            const {\r\n              chart: { ctx },\r\n            } = this;\r\n            ctx.save();\r\n            ctx.shadowColor = 'rgba(0,0,0,0.15)';\r\n            ctx.shadowBlur = 10;\r\n            ctx.shadowOffsetX = 0;\r\n            ctx.shadowOffsetY = 10;\r\n            ctx.responsive = true;\r\n            ctx.stroke();\r\n            Chart.controllers.line.prototype.draw.apply(this, arguments);\r\n            ctx.restore();\r\n          },\r\n        });\r\n      }\r\n      const context = chartContainer.current.getContext('2d');\r\n      const newChartInstance = new Chart(context, {\r\n        type: shadow ? 'lineWithShadow' : 'line',\r\n        options: lineChartOptions,\r\n        data,\r\n      });\r\n      setChartInstance(newChartInstance);\r\n    }\r\n  }, [chartContainer, data, shadow]);\r\n\r\n  return <canvas ref={chartContainer} />;\r\n};\r\n\r\nexport default Line;\r\n","/* eslint-disable prefer-rest-params */\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { Chart } from 'chart.js';\r\n\r\nimport { pieChartOptions } from './config';\r\n\r\nconst Pie = ({ data, shadow = false }) => {\r\n  const chartContainer = useRef(null);\r\n  const [, setChartInstance] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (chartContainer && chartContainer.current) {\r\n      if (shadow) {\r\n        Chart.defaults.pieWithShadow = Chart.defaults.pie;\r\n        Chart.controllers.pieWithShadow = Chart.controllers.pie.extend({\r\n          draw(ease) {\r\n            Chart.controllers.pie.prototype.draw.call(this, ease);\r\n            const {\r\n              chart: { ctx },\r\n            } = this;\r\n            ctx.save();\r\n            ctx.shadowColor = 'rgba(0,0,0,0.15)';\r\n            ctx.shadowBlur = 10;\r\n            ctx.shadowOffsetX = 0;\r\n            ctx.shadowOffsetY = 10;\r\n            ctx.responsive = true;\r\n            Chart.controllers.pie.prototype.draw.apply(this, arguments);\r\n            ctx.restore();\r\n          },\r\n        });\r\n      }\r\n      const context = chartContainer.current.getContext('2d');\r\n      const newChartInstance = new Chart(context, {\r\n        type: shadow ? 'pieWithShadow' : 'pie',\r\n        options: pieChartOptions,\r\n        data,\r\n      });\r\n      setChartInstance(newChartInstance);\r\n    }\r\n  }, [chartContainer, data, shadow]);\r\n\r\n  return <canvas ref={chartContainer} />;\r\n};\r\n\r\nexport default Pie;\r\n","/* eslint-disable prefer-rest-params */\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { Chart } from 'chart.js';\r\n\r\nimport { polarAreaChartOptions } from './config';\r\n\r\nconst PolarArea = ({ data, shadow = false }) => {\r\n  const chartContainer = useRef(null);\r\n  const [, setChartInstance] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (chartContainer && chartContainer.current) {\r\n      if (shadow) {\r\n        Chart.defaults.polarWithShadow = Chart.defaults.polarArea;\r\n        Chart.controllers.polarWithShadow = Chart.controllers.polarArea.extend({\r\n          draw(ease) {\r\n            Chart.controllers.radar.prototype.draw.call(this, ease);\r\n            const {\r\n              chart: { ctx },\r\n            } = this;\r\n            ctx.save();\r\n            ctx.shadowColor = 'rgba(0,0,0,0.2)';\r\n            ctx.shadowBlur = 7;\r\n            ctx.shadowOffsetX = 0;\r\n            ctx.shadowOffsetY = 7;\r\n            ctx.responsive = true;\r\n            Chart.controllers.radar.prototype.draw.apply(this, arguments);\r\n            ctx.restore();\r\n          },\r\n        });\r\n      }\r\n      const context = chartContainer.current.getContext('2d');\r\n      const newChartInstance = new Chart(context, {\r\n        type: shadow ? 'polarWithShadow' : 'polarArea',\r\n        options: polarAreaChartOptions,\r\n        data,\r\n      });\r\n      setChartInstance(newChartInstance);\r\n    }\r\n  }, [chartContainer, data, shadow]);\r\n\r\n  return <canvas ref={chartContainer} />;\r\n};\r\n\r\nexport default PolarArea;\r\n","/* eslint-disable prefer-rest-params */\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { Chart } from 'chart.js';\r\n\r\nimport { radarChartOptions } from './config';\r\n\r\nconst Radar = ({ data, shadow = false }) => {\r\n  const chartContainer = useRef(null);\r\n  const [, setChartInstance] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (chartContainer && chartContainer.current) {\r\n      if (shadow) {\r\n        Chart.defaults.radarWithShadow = Chart.defaults.radar;\r\n        Chart.controllers.radarWithShadow = Chart.controllers.radar.extend({\r\n          draw(ease) {\r\n            Chart.controllers.radar.prototype.draw.call(this, ease);\r\n            const {\r\n              chart: { ctx },\r\n            } = this;\r\n            ctx.save();\r\n            ctx.shadowColor = 'rgba(0,0,0,0.2)';\r\n            ctx.shadowBlur = 7;\r\n            ctx.shadowOffsetX = 0;\r\n            ctx.shadowOffsetY = 7;\r\n            ctx.responsive = true;\r\n            Chart.controllers.radar.prototype.draw.apply(this, arguments);\r\n            ctx.restore();\r\n          },\r\n        });\r\n      }\r\n      const context = chartContainer.current.getContext('2d');\r\n      const newChartInstance = new Chart(context, {\r\n        type: shadow ? 'radarWithShadow' : 'radar',\r\n        options: radarChartOptions,\r\n        data,\r\n      });\r\n      setChartInstance(newChartInstance);\r\n    }\r\n  }, [chartContainer, data, shadow]);\r\n\r\n  return <canvas ref={chartContainer} />;\r\n};\r\n\r\nexport default Radar;\r\n","/* eslint-disable prefer-rest-params */\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { Chart } from 'chart.js';\r\n\r\nimport { scatterChartOptions } from './config';\r\n\r\nconst Scatter = ({ data, shadow = false }) => {\r\n  const chartContainer = useRef(null);\r\n  const [, setChartInstance] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (chartContainer && chartContainer.current) {\r\n      if (shadow) {\r\n        Chart.defaults.scatterWithShadow = Chart.defaults.scatter;\r\n        Chart.controllers.scatterWithShadow = Chart.controllers.scatter.extend({\r\n          draw(ease) {\r\n            Chart.controllers.scatter.prototype.draw.call(this, ease);\r\n            const {\r\n              chart: { ctx },\r\n            } = this;\r\n            ctx.save();\r\n            ctx.shadowColor = 'rgba(0,0,0,0.2)';\r\n            ctx.shadowBlur = 7;\r\n            ctx.shadowOffsetX = 0;\r\n            ctx.shadowOffsetY = 7;\r\n            ctx.responsive = true;\r\n            Chart.controllers.scatter.prototype.draw.apply(this, arguments);\r\n            ctx.restore();\r\n          },\r\n        });\r\n      }\r\n      const context = chartContainer.current.getContext('2d');\r\n      const newChartInstance = new Chart(context, {\r\n        type: shadow ? 'scatterWithShadow' : 'scatter',\r\n        options: scatterChartOptions,\r\n        data,\r\n      });\r\n      setChartInstance(newChartInstance);\r\n    }\r\n  }, [chartContainer, data, shadow]);\r\n\r\n  return <canvas ref={chartContainer} />;\r\n};\r\n\r\nexport default Scatter;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-param-reassign */\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { Chart } from 'chart.js';\r\n\r\nimport { smallLineChartOptions } from './config';\r\n\r\nconst addCommas = (nStr) => {\r\n  nStr += '';\r\n  const x = nStr.split('.');\r\n  let x1 = x[0];\r\n  const x2 = x.length > 1 ? `.${x[1]}` : '';\r\n  const rgx = /(\\d+)(\\d{3})/;\r\n  while (rgx.test(x1)) {\r\n    x1 = x1.replace(rgx, '$1,$2');\r\n  }\r\n  return x1 + x2;\r\n};\r\n\r\nconst Scatter = ({ data }) => {\r\n  const chartContainer = useRef(null);\r\n  const [, setChartInstance] = useState(null);\r\n  const [currentValue, setCurrentValue] = useState('');\r\n  const [currentLabel, setCurrentLabel] = useState('');\r\n\r\n  const changeState = (yLabel, xLabel) => {\r\n    setCurrentValue(yLabel);\r\n    setCurrentLabel(xLabel);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chartContainer && chartContainer.current) {\r\n      Chart.controllers.lineWithLine = Chart.controllers.line;\r\n      Chart.controllers.lineWithLine = Chart.controllers.line.extend({\r\n        draw(ease) {\r\n          Chart.controllers.line.prototype.draw.call(this, ease);\r\n          const {\r\n            chart: { ctx, tooltip, scales },\r\n          } = this;\r\n\r\n          if (tooltip._active && tooltip._active[0]) {\r\n            const activePoint = tooltip._active[0];\r\n            const { x } = activePoint.tooltipPosition();\r\n            const topY = scales['y-axis-0'].top;\r\n            const bottomY = scales['y-axis-0'].bottom;\r\n            ctx.save();\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, topY);\r\n            ctx.lineTo(x, bottomY);\r\n            ctx.lineWidth = 1;\r\n            ctx.strokeStyle = 'rgba(0,0,0,0.1)';\r\n            ctx.stroke();\r\n            ctx.restore();\r\n          }\r\n        },\r\n      });\r\n      const context = chartContainer.current.getContext('2d');\r\n      const newChartInstance = new Chart(context, {\r\n        type: 'lineWithLine',\r\n        options: {\r\n          ...smallLineChartOptions,\r\n          tooltips: {\r\n            intersect: false,\r\n            enabled: false,\r\n            custom(tooltipModel) {\r\n              if (tooltipModel && tooltipModel.dataPoints) {\r\n                const { yLabel } = tooltipModel.dataPoints[0];\r\n                const { xLabel } = tooltipModel.dataPoints[0];\r\n                const label = tooltipModel.body[0].lines[0].split(':')[0];\r\n                changeState(`$${addCommas(yLabel)}`, `${label}-${xLabel}`);\r\n              }\r\n            },\r\n          },\r\n        },\r\n        plugins: [\r\n          {\r\n            afterInit(chart, _options) {\r\n              const yLabel = chart.data.datasets[0].data[0];\r\n              const xLabel = chart.data.labels[0];\r\n              const { label } = chart.data.datasets[0];\r\n              changeState(`$${addCommas(yLabel)}`, `${label}-${xLabel}`);\r\n            },\r\n          },\r\n        ],\r\n        data,\r\n      });\r\n      setChartInstance(newChartInstance);\r\n    }\r\n  }, [chartContainer, data]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <p className=\"lead color-theme-1 mb-1 value\">{currentValue}</p>\r\n        <p className=\"mb-0 label text-small\">{currentLabel}</p>\r\n      </div>\r\n      <div className=\"chart\">\r\n        <canvas ref={chartContainer} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scatter;\r\n","import { ThemeColors } from '../helpers/ThemeColors';\r\n\r\nconst colors = ThemeColors();\r\n\r\nexport const lineChartData = {\r\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n  datasets: [\r\n    {\r\n      label: '',\r\n      data: [54, 63, 60, 65, 60, 68, 60],\r\n      borderColor: colors.themeColor1,\r\n      pointBackgroundColor: colors.foregroundColor,\r\n      pointBorderColor: colors.themeColor1,\r\n      pointHoverBackgroundColor: colors.themeColor1,\r\n      pointHoverBorderColor: colors.foregroundColor,\r\n      pointRadius: 6,\r\n      pointBorderWidth: 2,\r\n      pointHoverRadius: 8,\r\n      fill: false,\r\n    },\r\n  ],\r\n};\r\n\r\nexport const polarAreaChartData = {\r\n  labels: ['Sales', 'Orders', 'Stock'],\r\n  datasets: [\r\n    {\r\n      data: [80, 90, 70],\r\n      borderWidth: 2,\r\n      borderColor: [colors.themeColor1, colors.themeColor2, colors.themeColor3],\r\n      backgroundColor: [\r\n        colors.themeColor1_10,\r\n        colors.themeColor2_10,\r\n        colors.themeColor3_10,\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const areaChartData = {\r\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n  datasets: [\r\n    {\r\n      label: '',\r\n      data: [54, 63, 60, 65, 60, 68, 60],\r\n      borderColor: colors.themeColor1,\r\n      pointBackgroundColor: colors.foregroundColor,\r\n      pointBorderColor: colors.themeColor1,\r\n      pointHoverBackgroundColor: colors.themeColor1,\r\n      pointHoverBorderColor: colors.foregroundColor,\r\n      pointRadius: 4,\r\n      pointBorderWidth: 2,\r\n      pointHoverRadius: 5,\r\n      fill: true,\r\n      borderWidth: 2,\r\n      backgroundColor: colors.themeColor1_10,\r\n    },\r\n  ],\r\n};\r\n\r\nexport const scatterChartData = {\r\n  datasets: [\r\n    {\r\n      borderWidth: 2,\r\n      showLine: false,\r\n      label: 'Cakes',\r\n      borderColor: colors.themeColor1,\r\n      backgroundColor: colors.themeColor1_10,\r\n      data: [\r\n        { x: 62, y: -78 },\r\n        { x: -0, y: 74 },\r\n        { x: -67, y: 45 },\r\n        { x: -26, y: -43 },\r\n        { x: -15, y: -30 },\r\n        { x: 65, y: -68 },\r\n        { x: -28, y: -61 },\r\n      ],\r\n    },\r\n    {\r\n      borderWidth: 2,\r\n      showLine: false,\r\n      label: 'Desserts',\r\n      borderColor: colors.themeColor2,\r\n      backgroundColor: colors.themeColor2_10,\r\n      data: [\r\n        { x: 79, y: 62 },\r\n        { x: 62, y: 0 },\r\n        { x: -76, y: -81 },\r\n        { x: -51, y: 41 },\r\n        { x: -9, y: 9 },\r\n        { x: 72, y: -37 },\r\n        { x: 62, y: -26 },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const barChartData = {\r\n  labels: ['January', 'February', 'March', 'April', 'May', 'June'],\r\n  datasets: [\r\n    {\r\n      label: 'Cakes',\r\n      borderColor: colors.themeColor1,\r\n      backgroundColor: colors.themeColor1_10,\r\n      data: [456, 479, 324, 569, 702, 600],\r\n      borderWidth: 2,\r\n    },\r\n    {\r\n      label: 'Desserts',\r\n      borderColor: colors.themeColor2,\r\n      backgroundColor: colors.themeColor2_10,\r\n      data: [364, 504, 605, 400, 345, 320],\r\n      borderWidth: 2,\r\n    },\r\n  ],\r\n};\r\n\r\nexport const radarChartData = {\r\n  datasets: [\r\n    {\r\n      label: 'Stock',\r\n      borderWidth: 2,\r\n      pointBackgroundColor: colors.themeColor1,\r\n      borderColor: colors.themeColor1,\r\n      backgroundColor: colors.themeColor1_10,\r\n      data: [80, 90, 70],\r\n    },\r\n    {\r\n      label: 'Order',\r\n      borderWidth: 2,\r\n      pointBackgroundColor: colors.themeColor2,\r\n      borderColor: colors.themeColor2,\r\n      backgroundColor: colors.themeColor2_10,\r\n      data: [68, 80, 95],\r\n    },\r\n  ],\r\n  labels: ['Cakes', 'Desserts', 'Cupcakes'],\r\n};\r\n\r\nexport const pieChartData = {\r\n  labels: ['Cakes', 'Cupcakes', 'Desserts'],\r\n  datasets: [\r\n    {\r\n      label: '',\r\n      borderColor: [colors.themeColor1, colors.themeColor2, colors.themeColor3],\r\n      backgroundColor: [\r\n        colors.themeColor1_10,\r\n        colors.themeColor2_10,\r\n        colors.themeColor3_10,\r\n      ],\r\n      borderWidth: 2,\r\n      data: [15, 25, 20],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const doughnutChartData = {\r\n  labels: ['Cakes', 'Cupcakes', 'Desserts'],\r\n  datasets: [\r\n    {\r\n      label: '',\r\n      borderColor: [colors.themeColor3, colors.themeColor2, colors.themeColor1],\r\n      backgroundColor: [\r\n        colors.themeColor3_10,\r\n        colors.themeColor2_10,\r\n        colors.themeColor1_10,\r\n      ],\r\n      borderWidth: 2,\r\n      data: [15, 25, 20],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const smallChartData1 = {\r\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n  datasets: [\r\n    {\r\n      label: 'Total Orders',\r\n      borderColor: colors.themeColor1,\r\n      pointBorderColor: colors.themeColor1,\r\n      pointHoverBackgroundColor: colors.themeColor1,\r\n      pointHoverBorderColor: colors.themeColor1,\r\n      pointRadius: 2,\r\n      pointBorderWidth: 3,\r\n      pointHoverRadius: 2,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      data: [1250, 1300, 1550, 921, 1810, 1106, 1610],\r\n      datalabels: {\r\n        align: 'end',\r\n        anchor: 'end',\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport const smallChartData2 = {\r\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n  datasets: [\r\n    {\r\n      label: 'Pending Orders',\r\n      borderColor: colors.themeColor1,\r\n      pointBorderColor: colors.themeColor1,\r\n      pointHoverBackgroundColor: colors.themeColor1,\r\n      pointHoverBorderColor: colors.themeColor1,\r\n      pointRadius: 2,\r\n      pointBorderWidth: 3,\r\n      pointHoverRadius: 2,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      data: [115, 120, 300, 222, 105, 85, 36],\r\n      datalabels: {\r\n        align: 'end',\r\n        anchor: 'end',\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport const smallChartData3 = {\r\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n  datasets: [\r\n    {\r\n      label: 'Total Orders',\r\n      borderColor: colors.themeColor1,\r\n      pointBorderColor: colors.themeColor1,\r\n      pointHoverBackgroundColor: colors.themeColor1,\r\n      pointHoverBorderColor: colors.themeColor1,\r\n      pointRadius: 2,\r\n      pointBorderWidth: 3,\r\n      pointHoverRadius: 2,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      data: [350, 452, 762, 952, 630, 85, 158],\r\n      datalabels: {\r\n        align: 'end',\r\n        anchor: 'end',\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport const smallChartData4 = {\r\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n  datasets: [\r\n    {\r\n      label: 'Total Orders',\r\n      borderColor: colors.themeColor1,\r\n      pointBorderColor: colors.themeColor1,\r\n      pointHoverBackgroundColor: colors.themeColor1,\r\n      pointHoverBorderColor: colors.themeColor1,\r\n      pointRadius: 2,\r\n      pointBorderWidth: 3,\r\n      pointHoverRadius: 2,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      data: [200, 452, 250, 630, 125, 85, 20],\r\n      datalabels: {\r\n        align: 'end',\r\n        anchor: 'end',\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport const conversionChartData = {\r\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n  datasets: [\r\n    {\r\n      label: '',\r\n      data: [65, 60, 68, 60, 58, 63, 60],\r\n      borderColor: colors.themeColor2,\r\n      pointBackgroundColor: colors.foregroundColor,\r\n      pointBorderColor: colors.themeColor2,\r\n      pointHoverBackgroundColor: colors.themeColor2,\r\n      pointHoverBorderColor: colors.foregroundColor,\r\n      pointRadius: 4,\r\n      pointBorderWidth: 2,\r\n      pointHoverRadius: 5,\r\n      fill: true,\r\n      borderWidth: 2,\r\n      backgroundColor: colors.themeColor2_10,\r\n    },\r\n  ],\r\n};\r\n","export const ThemeColors = () => {\r\n  const rootStyle = getComputedStyle(document.body);\r\n  return {\r\n    themeColor1: rootStyle.getPropertyValue('--theme-color-1').trim(),\r\n    themeColor2: rootStyle.getPropertyValue('--theme-color-2').trim(),\r\n    themeColor3: rootStyle.getPropertyValue('--theme-color-3').trim(),\r\n    themeColor4: rootStyle.getPropertyValue('--theme-color-4').trim(),\r\n    themeColor5: rootStyle.getPropertyValue('--theme-color-5').trim(),\r\n    themeColor6: rootStyle.getPropertyValue('--theme-color-6').trim(),\r\n    themeColor1_10: rootStyle.getPropertyValue('--theme-color-1-10').trim(),\r\n    themeColor2_10: rootStyle.getPropertyValue('--theme-color-2-10').trim(),\r\n    themeColor3_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\r\n    themeColor4_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\r\n    themeColor5_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\r\n    themeColor6_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\r\n    primaryColor: rootStyle.getPropertyValue('--primary-color').trim(),\r\n    foregroundColor: rootStyle.getPropertyValue('--foreground-color').trim(),\r\n    separatorColor: rootStyle.getPropertyValue('--separator-color').trim(),\r\n  };\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n} from 'reactstrap';\r\n\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { AreaChart } from '../../components/charts';\r\n\r\nimport { areaChartData } from '../../data/charts';\r\n\r\nconst WebsiteVisitsChartCard = ({ className = '', controls = true }) => {\r\n  return (\r\n    <Card className={`${className} dashboard-filled-line-chart`}>\r\n      <CardBody>\r\n        <div className=\"float-left float-none-xs\">\r\n          <div className=\"d-inline-block\">\r\n            <h5 className=\"d-inline\">\r\n              <IntlMessages id=\"dashboards.website-visits\" />\r\n            </h5>\r\n            <span className=\"text-muted text-small d-block\">\r\n              <IntlMessages id=\"dashboards.unique-visitors\" />\r\n            </span>\r\n          </div>\r\n        </div>\r\n        {controls && (\r\n          <div className=\"btn-group float-right float-none-xs mt-2\">\r\n            <UncontrolledDropdown>\r\n              <DropdownToggle caret color=\"primary\" className=\"btn-xs\" outline>\r\n                <IntlMessages id=\"dashboards.this-week\" />\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem>\r\n                  <IntlMessages id=\"dashboards.last-week\" />\r\n                </DropdownItem>\r\n                <DropdownItem>\r\n                  <IntlMessages id=\"dashboards.this-month\" />\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        )}\r\n      </CardBody>\r\n\r\n      <div className=\"chart card-body pt-0\">\r\n        <AreaChart shadow data={areaChartData} />\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default WebsiteVisitsChartCard;\r\n","import React from 'react';\r\nimport { Card, CardBody, CardTitle, CardHeader } from 'reactstrap';\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\n\r\nconst RadialProgressCard = ({\r\n  title = 'title',\r\n  percent = 50,\r\n  isSortable = false,\r\n}) => {\r\n  return (\r\n    <Card>\r\n      {isSortable && (\r\n        <CardHeader className=\"p-0 position-relative\">\r\n          <div className=\"position-absolute handle card-icon\">\r\n            <i className=\"simple-icon-shuffle\" />\r\n          </div>\r\n        </CardHeader>\r\n      )}\r\n      <CardBody className=\"d-flex justify-content-between align-items-center\">\r\n        <CardTitle className=\"mb-0\">{title}</CardTitle>\r\n        <div className=\"progress-bar-circle\">\r\n          <CircularProgressbar\r\n            strokeWidth={4}\r\n            value={percent}\r\n            text={`${percent}%`}\r\n          />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\nexport default React.memo(RadialProgressCard);\r\n","import React from 'react';\r\nimport { Row, Card, CardBody } from 'reactstrap';\r\n\r\nimport { Colxx } from '../../components/common/CustomBootstrap';\r\nimport { SmallLineChart } from '../../components/charts';\r\n\r\nimport {\r\n  smallChartData1,\r\n  smallChartData2,\r\n  smallChartData3,\r\n  smallChartData4,\r\n} from '../../data/charts';\r\n\r\nconst SmallLineCharts = ({ itemClass = 'dashboard-small-chart' }) => {\r\n  return (\r\n    <Row>\r\n      <Colxx xxs=\"6\" className=\"mb-4\">\r\n        <Card className={itemClass}>\r\n          <CardBody>\r\n            <SmallLineChart data={smallChartData1} />\r\n          </CardBody>\r\n        </Card>\r\n      </Colxx>\r\n      <Colxx xxs=\"6\" className=\"mb-4\">\r\n        <Card className={itemClass}>\r\n          <CardBody>\r\n            <SmallLineChart data={smallChartData2} />\r\n          </CardBody>\r\n        </Card>\r\n      </Colxx>\r\n      <Colxx xxs=\"6\" className=\"mb-4\">\r\n        <Card className={itemClass}>\r\n          <CardBody>\r\n            <SmallLineChart data={smallChartData3} />\r\n          </CardBody>\r\n        </Card>\r\n      </Colxx>\r\n      <Colxx xxs=\"6\" className=\"mb-4\">\r\n        <Card className={itemClass}>\r\n          <CardBody>\r\n            <SmallLineChart data={smallChartData4} />\r\n          </CardBody>\r\n        </Card>\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default SmallLineCharts;\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nconst getMenuTitle = (sub) => {\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return '';\r\n  }\r\n  return path.split(sub)[0] + sub;\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <>\r\n      {heading && (\r\n        <h1>\r\n          <IntlMessages id={heading} />\r\n        </h1>\r\n      )}\r\n      <BreadcrumbItems match={match} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split('/');\r\n  if (paths[paths.length - 1].indexOf(':') > -1) {\r\n    paths = paths.filter((x) => x.indexOf(':') === -1);\r\n  }\r\n  return (\r\n    <>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n"],"sourceRoot":""}